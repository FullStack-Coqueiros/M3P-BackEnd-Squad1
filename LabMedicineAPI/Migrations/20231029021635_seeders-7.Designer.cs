// <auto-generated />
using System;
using LabMedicineAPI.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabMedicineAPI.Migrations
{
    [DbContext(typeof(LabMedicineDbContext))]
    [Migration("20231029021635_seeders-7")]
    partial class seeders7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabMedicineAPI.Model.ConsultaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosagemEPrecaucoes")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicacaoIndicada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoConsulta")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("ProblemaDescricao")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("StatusSistema")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Consultas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2023, 10, 27, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7010),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 22, 16, 34, 662, DateTimeKind.Local).AddTicks(7023),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 1",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 1",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2023, 10, 26, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7051),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 21, 16, 34, 662, DateTimeKind.Local).AddTicks(7052),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 2",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 2",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2023, 10, 25, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7069),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 20, 16, 34, 662, DateTimeKind.Local).AddTicks(7071),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 3",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 3",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2023, 10, 24, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7163),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 19, 16, 34, 662, DateTimeKind.Local).AddTicks(7164),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 4",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 4",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2023, 10, 23, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7180),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 18, 16, 34, 662, DateTimeKind.Local).AddTicks(7181),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 5",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 5",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2023, 10, 22, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7198),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 17, 16, 34, 662, DateTimeKind.Local).AddTicks(7199),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 6",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 6",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2023, 10, 21, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7213),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 16, 16, 34, 662, DateTimeKind.Local).AddTicks(7214),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 7",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 7",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2023, 10, 20, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7229),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 15, 16, 34, 662, DateTimeKind.Local).AddTicks(7229),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 8",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 8",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2023, 10, 19, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7244),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 14, 16, 34, 662, DateTimeKind.Local).AddTicks(7245),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 9",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 9",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 10,
                            Data = new DateTime(2023, 10, 18, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7263),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 13, 16, 34, 662, DateTimeKind.Local).AddTicks(7264),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 10",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 10",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 11,
                            Data = new DateTime(2023, 10, 17, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7279),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 12, 16, 34, 662, DateTimeKind.Local).AddTicks(7280),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 11",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 11",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 12,
                            Data = new DateTime(2023, 10, 16, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7295),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 11, 16, 34, 662, DateTimeKind.Local).AddTicks(7296),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 12",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 12",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 13,
                            Data = new DateTime(2023, 10, 15, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7310),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 10, 16, 34, 662, DateTimeKind.Local).AddTicks(7311),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 13",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 13",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 14,
                            Data = new DateTime(2023, 10, 14, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7326),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 9, 16, 34, 662, DateTimeKind.Local).AddTicks(7327),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 14",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 14",
                            StatusSistema = true,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 15,
                            Data = new DateTime(2023, 10, 13, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7342),
                            DosagemEPrecaucoes = "Dosagem e Precauções",
                            Horario = new DateTime(2023, 10, 28, 8, 16, 34, 662, DateTimeKind.Local).AddTicks(7343),
                            MedicacaoIndicada = "Medicação Indicada",
                            MotivoConsulta = "Motivo da Consulta 15",
                            PacienteId = 1,
                            ProblemaDescricao = "Descrição do problema para Consulta 15",
                            StatusSistema = true,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("LabMedicineAPI.Model.DietaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoDieta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeDieta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<bool>("StatusSistema")
                        .HasColumnType("bit");

                    b.Property<string>("TipoDieta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Dieta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2023, 10, 27, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7963),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 22, 16, 34, 662, DateTimeKind.Local).AddTicks(7964),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2023, 10, 26, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7986),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 21, 16, 34, 662, DateTimeKind.Local).AddTicks(7986),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2023, 10, 25, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7999),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 20, 16, 34, 662, DateTimeKind.Local).AddTicks(8000),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2023, 10, 24, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8012),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 19, 16, 34, 662, DateTimeKind.Local).AddTicks(8013),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2023, 10, 23, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8025),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 18, 16, 34, 662, DateTimeKind.Local).AddTicks(8026),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2023, 10, 22, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8039),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 17, 16, 34, 662, DateTimeKind.Local).AddTicks(8040),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2023, 10, 21, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8052),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 16, 16, 34, 662, DateTimeKind.Local).AddTicks(8053),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2023, 10, 20, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8065),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 15, 16, 34, 662, DateTimeKind.Local).AddTicks(8066),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2023, 10, 19, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8077),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 14, 16, 34, 662, DateTimeKind.Local).AddTicks(8078),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 10,
                            Data = new DateTime(2023, 10, 18, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8092),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 13, 16, 34, 662, DateTimeKind.Local).AddTicks(8093),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 11,
                            Data = new DateTime(2023, 10, 17, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8104),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 12, 16, 34, 662, DateTimeKind.Local).AddTicks(8105),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            Data = new DateTime(2023, 10, 16, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8117),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 11, 16, 34, 662, DateTimeKind.Local).AddTicks(8118),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 13,
                            Data = new DateTime(2023, 10, 15, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8130),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 10, 16, 34, 662, DateTimeKind.Local).AddTicks(8131),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 14,
                            Data = new DateTime(2023, 10, 14, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8143),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 9, 16, 34, 662, DateTimeKind.Local).AddTicks(8144),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 15,
                            Data = new DateTime(2023, 10, 13, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8155),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 8, 16, 34, 662, DateTimeKind.Local).AddTicks(8156),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 16,
                            Data = new DateTime(2023, 10, 12, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8168),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 7, 16, 34, 662, DateTimeKind.Local).AddTicks(8169),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 17,
                            Data = new DateTime(2023, 10, 11, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8181),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 6, 16, 34, 662, DateTimeKind.Local).AddTicks(8182),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 18,
                            Data = new DateTime(2023, 10, 10, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8245),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 5, 16, 34, 662, DateTimeKind.Local).AddTicks(8246),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 19,
                            Data = new DateTime(2023, 10, 9, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8257),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 4, 16, 34, 662, DateTimeKind.Local).AddTicks(8258),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 20,
                            Data = new DateTime(2023, 10, 8, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8271),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 3, 16, 34, 662, DateTimeKind.Local).AddTicks(8272),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 21,
                            Data = new DateTime(2023, 10, 7, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8284),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 2, 16, 34, 662, DateTimeKind.Local).AddTicks(8285),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 22,
                            Data = new DateTime(2023, 10, 6, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8297),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 1, 16, 34, 662, DateTimeKind.Local).AddTicks(8298),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 23,
                            Data = new DateTime(2023, 10, 5, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8310),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 28, 0, 16, 34, 662, DateTimeKind.Local).AddTicks(8311),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 24,
                            Data = new DateTime(2023, 10, 4, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8322),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 27, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8323),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 25,
                            Data = new DateTime(2023, 10, 3, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8335),
                            DescricaoDieta = "Dieta com baixa ingestão de carboidratos",
                            Horario = new DateTime(2023, 10, 27, 22, 16, 34, 662, DateTimeKind.Local).AddTicks(8336),
                            NomeDieta = "Dieta Low Carb",
                            PacienteId = 5,
                            StatusSistema = true,
                            TipoDieta = "lowCarb",
                            UsuarioId = 3
                        });
                });

            modelBuilder.Entity("LabMedicineAPI.Model.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("PontoReferencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.ExameModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<string>("Laboratorio")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NomeExame")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Resultados")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("StatusSistema")
                        .HasColumnType("bit");

                    b.Property<string>("TipoExame")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Exame");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2023, 10, 27, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7366),
                            Horario = new DateTime(2023, 10, 28, 22, 16, 34, 662, DateTimeKind.Local).AddTicks(7368),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 1",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-1",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2023, 10, 26, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7394),
                            Horario = new DateTime(2023, 10, 28, 21, 16, 34, 662, DateTimeKind.Local).AddTicks(7395),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 2",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-2",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2023, 10, 25, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7410),
                            Horario = new DateTime(2023, 10, 28, 20, 16, 34, 662, DateTimeKind.Local).AddTicks(7411),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 3",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-3",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2023, 10, 24, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7425),
                            Horario = new DateTime(2023, 10, 28, 19, 16, 34, 662, DateTimeKind.Local).AddTicks(7426),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 4",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-4",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2023, 10, 23, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7575),
                            Horario = new DateTime(2023, 10, 28, 18, 16, 34, 662, DateTimeKind.Local).AddTicks(7578),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 5",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-5",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2023, 10, 22, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7596),
                            Horario = new DateTime(2023, 10, 28, 17, 16, 34, 662, DateTimeKind.Local).AddTicks(7597),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 6",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-6",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2023, 10, 21, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7612),
                            Horario = new DateTime(2023, 10, 28, 16, 16, 34, 662, DateTimeKind.Local).AddTicks(7613),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 7",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-7",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2023, 10, 20, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7627),
                            Horario = new DateTime(2023, 10, 28, 15, 16, 34, 662, DateTimeKind.Local).AddTicks(7628),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 8",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-8",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2023, 10, 19, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7643),
                            Horario = new DateTime(2023, 10, 28, 14, 16, 34, 662, DateTimeKind.Local).AddTicks(7643),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 9",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-9",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 10,
                            Data = new DateTime(2023, 10, 18, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7659),
                            Horario = new DateTime(2023, 10, 28, 13, 16, 34, 662, DateTimeKind.Local).AddTicks(7660),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 10",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-10",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 11,
                            Data = new DateTime(2023, 10, 17, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7676),
                            Horario = new DateTime(2023, 10, 28, 12, 16, 34, 662, DateTimeKind.Local).AddTicks(7677),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 11",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-11",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 12,
                            Data = new DateTime(2023, 10, 16, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7691),
                            Horario = new DateTime(2023, 10, 28, 11, 16, 34, 662, DateTimeKind.Local).AddTicks(7692),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 12",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-12",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 13,
                            Data = new DateTime(2023, 10, 15, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7706),
                            Horario = new DateTime(2023, 10, 28, 10, 16, 34, 662, DateTimeKind.Local).AddTicks(7707),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 13",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-13",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 14,
                            Data = new DateTime(2023, 10, 14, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7722),
                            Horario = new DateTime(2023, 10, 28, 9, 16, 34, 662, DateTimeKind.Local).AddTicks(7722),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 14",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-14",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 15,
                            Data = new DateTime(2023, 10, 13, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7737),
                            Horario = new DateTime(2023, 10, 28, 8, 16, 34, 662, DateTimeKind.Local).AddTicks(7738),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 15",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-15",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 16,
                            Data = new DateTime(2023, 10, 12, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7752),
                            Horario = new DateTime(2023, 10, 28, 7, 16, 34, 662, DateTimeKind.Local).AddTicks(7753),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 16",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-16",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 17,
                            Data = new DateTime(2023, 10, 11, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7767),
                            Horario = new DateTime(2023, 10, 28, 6, 16, 34, 662, DateTimeKind.Local).AddTicks(7768),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 17",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-17",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 18,
                            Data = new DateTime(2023, 10, 10, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7784),
                            Horario = new DateTime(2023, 10, 28, 5, 16, 34, 662, DateTimeKind.Local).AddTicks(7785),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 18",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-18",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 19,
                            Data = new DateTime(2023, 10, 9, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7801),
                            Horario = new DateTime(2023, 10, 28, 4, 16, 34, 662, DateTimeKind.Local).AddTicks(7802),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 19",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-19",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 20,
                            Data = new DateTime(2023, 10, 8, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7817),
                            Horario = new DateTime(2023, 10, 28, 3, 16, 34, 662, DateTimeKind.Local).AddTicks(7817),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 20",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-20",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 21,
                            Data = new DateTime(2023, 10, 7, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7879),
                            Horario = new DateTime(2023, 10, 28, 2, 16, 34, 662, DateTimeKind.Local).AddTicks(7880),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 21",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-21",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 22,
                            Data = new DateTime(2023, 10, 6, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7895),
                            Horario = new DateTime(2023, 10, 28, 1, 16, 34, 662, DateTimeKind.Local).AddTicks(7896),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 22",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-22",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 23,
                            Data = new DateTime(2023, 10, 5, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7910),
                            Horario = new DateTime(2023, 10, 28, 0, 16, 34, 662, DateTimeKind.Local).AddTicks(7911),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 23",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-23",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 24,
                            Data = new DateTime(2023, 10, 4, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7925),
                            Horario = new DateTime(2023, 10, 27, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7926),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 24",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-24",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 25,
                            Data = new DateTime(2023, 10, 3, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(7941),
                            Horario = new DateTime(2023, 10, 27, 22, 16, 34, 662, DateTimeKind.Local).AddTicks(7942),
                            Laboratorio = "Laboratório XYZ",
                            NomeExame = "Exame 25",
                            PacienteId = 1,
                            Resultados = "Resultados do exame",
                            StatusSistema = true,
                            TipoExame = "Tipo de Exame",
                            Url = "http://www.laboratorioxyz.com/exames/exame-25",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("LabMedicineAPI.Model.ExercicioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoExerc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeSerieExerc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadeSemana")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("StatusSistema")
                        .HasColumnType("bit");

                    b.Property<string>("TipoExerc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Exercicio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2023, 10, 27, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8357),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 22, 16, 34, 662, DateTimeKind.Local).AddTicks(8358),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 1m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2023, 10, 26, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8382),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 21, 16, 34, 662, DateTimeKind.Local).AddTicks(8382),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 2m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2023, 10, 25, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8395),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 20, 16, 34, 662, DateTimeKind.Local).AddTicks(8396),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 3m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2023, 10, 24, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8409),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 19, 16, 34, 662, DateTimeKind.Local).AddTicks(8409),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 4m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2023, 10, 23, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8421),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 18, 16, 34, 662, DateTimeKind.Local).AddTicks(8422),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 5m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2023, 10, 22, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8437),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 17, 16, 34, 662, DateTimeKind.Local).AddTicks(8437),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 6m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2023, 10, 21, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8449),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 16, 16, 34, 662, DateTimeKind.Local).AddTicks(8450),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 7m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2023, 10, 20, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8462),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 15, 16, 34, 662, DateTimeKind.Local).AddTicks(8463),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 8m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2023, 10, 19, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8475),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 14, 16, 34, 662, DateTimeKind.Local).AddTicks(8476),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 9m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 10,
                            Data = new DateTime(2023, 10, 18, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8489),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 13, 16, 34, 662, DateTimeKind.Local).AddTicks(8490),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 10m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 11,
                            Data = new DateTime(2023, 10, 17, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8502),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 12, 16, 34, 662, DateTimeKind.Local).AddTicks(8503),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 11m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 12,
                            Data = new DateTime(2023, 10, 16, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8514),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 11, 16, 34, 662, DateTimeKind.Local).AddTicks(8515),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 12m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            Data = new DateTime(2023, 10, 15, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8527),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 10, 16, 34, 662, DateTimeKind.Local).AddTicks(8528),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 13m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 14,
                            Data = new DateTime(2023, 10, 14, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8540),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 9, 16, 34, 662, DateTimeKind.Local).AddTicks(8541),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 14m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 15,
                            Data = new DateTime(2023, 10, 13, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8553),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 8, 16, 34, 662, DateTimeKind.Local).AddTicks(8554),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 15m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 16,
                            Data = new DateTime(2023, 10, 12, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8631),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 7, 16, 34, 662, DateTimeKind.Local).AddTicks(8632),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 16m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 17,
                            Data = new DateTime(2023, 10, 11, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8648),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 6, 16, 34, 662, DateTimeKind.Local).AddTicks(8649),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 17m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 18,
                            Data = new DateTime(2023, 10, 10, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8663),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 5, 16, 34, 662, DateTimeKind.Local).AddTicks(8663),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 18m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 19,
                            Data = new DateTime(2023, 10, 9, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8675),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 4, 16, 34, 662, DateTimeKind.Local).AddTicks(8676),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 19m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 20,
                            Data = new DateTime(2023, 10, 8, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8689),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 3, 16, 34, 662, DateTimeKind.Local).AddTicks(8690),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 20m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 21,
                            Data = new DateTime(2023, 10, 7, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8701),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 2, 16, 34, 662, DateTimeKind.Local).AddTicks(8702),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 21m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 22,
                            Data = new DateTime(2023, 10, 6, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8714),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 1, 16, 34, 662, DateTimeKind.Local).AddTicks(8715),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 22m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 23,
                            Data = new DateTime(2023, 10, 5, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8727),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 28, 0, 16, 34, 662, DateTimeKind.Local).AddTicks(8728),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 23m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 24,
                            Data = new DateTime(2023, 10, 4, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8740),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 27, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8741),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 24m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 25,
                            Data = new DateTime(2023, 10, 3, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8752),
                            DescricaoExerc = "Série de exercícios aeróbicos para melhorar resistência",
                            Horario = new DateTime(2023, 10, 27, 22, 16, 34, 662, DateTimeKind.Local).AddTicks(8753),
                            NomeSerieExerc = "Exercícios de Resistência Aeróbica",
                            PacienteId = 8,
                            QuantidadeSemana = 25m,
                            StatusSistema = true,
                            TipoExerc = "Resistência_aerobica",
                            UsuarioId = 4
                        });
                });

            modelBuilder.Entity("LabMedicineAPI.Model.MedicamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeMedicamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("StatusSistema")
                        .HasColumnType("bit");

                    b.Property<string>("TipoMedicamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Medicamento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2023, 10, 29, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8770),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 1",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2023, 10, 30, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8799),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 2",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2023, 10, 31, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8814),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 3",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2023, 11, 1, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8830),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 4",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2023, 11, 2, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8843),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 5",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2023, 11, 3, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8859),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 6",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2023, 11, 4, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8874),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 7",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2023, 11, 5, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8888),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 8",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2023, 11, 6, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8902),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 9",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 10,
                            Data = new DateTime(2023, 11, 7, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8918),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 10",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 11,
                            Data = new DateTime(2023, 11, 8, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8933),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 11",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 12,
                            Data = new DateTime(2023, 11, 9, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(8993),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 12",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 13,
                            Data = new DateTime(2023, 11, 10, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9008),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 13",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 14,
                            Data = new DateTime(2023, 11, 11, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9021),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 14",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 15,
                            Data = new DateTime(2023, 11, 12, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9035),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 15",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 16,
                            Data = new DateTime(2023, 11, 13, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9048),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 16",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 17,
                            Data = new DateTime(2023, 11, 14, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9062),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 17",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 18,
                            Data = new DateTime(2023, 11, 15, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9078),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 18",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 19,
                            Data = new DateTime(2023, 11, 16, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9091),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 19",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 20,
                            Data = new DateTime(2023, 11, 17, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9105),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 20",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 21,
                            Data = new DateTime(2023, 11, 18, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9118),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 21",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 22,
                            Data = new DateTime(2023, 11, 19, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9132),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 22",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 23,
                            Data = new DateTime(2023, 11, 20, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9145),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 23",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 24,
                            Data = new DateTime(2023, 11, 21, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9159),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 24",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 25,
                            Data = new DateTime(2023, 11, 22, 23, 16, 34, 662, DateTimeKind.Local).AddTicks(9173),
                            Horario = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeMedicamento = "Medicamento 1",
                            Observacoes = "Observações do medicamento 25",
                            PacienteId = 15,
                            Quantidade = 10m,
                            StatusSistema = true,
                            TipoMedicamento = "cápsula",
                            Unidade = "mg",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("LabMedicineAPI.Model.PacienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alergias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ContatoEmergencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CuidadosEspecificos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NumeroConvenio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("RgOrgaoExpedidor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StatusSistema")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("ValidadeConvenio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Paciente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alergias = "Nenhuma alergia conhecida",
                            CPF = "09856326588",
                            ContatoEmergencia = "48996325484",
                            Convenio = "Plano de Saúde ABC",
                            CuidadosEspecificos = "Nenhum cuidado específico",
                            DataNascimento = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amandasq95@gmail.com",
                            EstadoCivil = "Casado",
                            Genero = "Feminino",
                            Naturalidade = "São Paulo, SP",
                            NomeCompleto = "Amanda Siqueira",
                            NumeroConvenio = "98765432",
                            RgOrgaoExpedidor = "1234567",
                            StatusSistema = "1",
                            Telefone = "(11) 555-1234",
                            ValidadeConvenio = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Alergias = "Nenhuma alergia conhecida",
                            CPF = "09856326588",
                            ContatoEmergencia = "48996325484",
                            Convenio = "Plano de Saúde ABC",
                            CuidadosEspecificos = "Nenhum cuidado específico",
                            DataNascimento = new DateTime(1982, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "paciente2@example.com",
                            EstadoCivil = "Casado",
                            Genero = "Feminino",
                            Naturalidade = "São Paulo, SP",
                            NomeCompleto = "Paciente 2",
                            NumeroConvenio = "98765432",
                            RgOrgaoExpedidor = "1234567",
                            StatusSistema = "1",
                            Telefone = "(11) 555-1234",
                            ValidadeConvenio = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Alergias = "Nenhuma alergia conhecida",
                            CPF = "09856326588",
                            ContatoEmergencia = "48996325484",
                            Convenio = "Plano de Saúde ABC",
                            CuidadosEspecificos = "Nenhum cuidado específico",
                            DataNascimento = new DateTime(1984, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "paciente4@example.com",
                            EstadoCivil = "Casado",
                            Genero = "Feminino",
                            Naturalidade = "São Paulo, SP",
                            NomeCompleto = "Paciente 4",
                            NumeroConvenio = "98765432",
                            RgOrgaoExpedidor = "1234567",
                            StatusSistema = "1",
                            Telefone = "(11) 555-1234",
                            ValidadeConvenio = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Alergias = "Nenhuma alergia conhecida",
                            CPF = "09856326588",
                            ContatoEmergencia = "48996325484",
                            Convenio = "Plano de Saúde ABC",
                            CuidadosEspecificos = "Nenhum cuidado específico",
                            DataNascimento = new DateTime(1986, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "paciente6@example.com",
                            EstadoCivil = "Casado",
                            Genero = "Feminino",
                            Naturalidade = "São Paulo, SP",
                            NomeCompleto = "Paciente 6",
                            NumeroConvenio = "98765432",
                            RgOrgaoExpedidor = "1234567",
                            StatusSistema = "1",
                            Telefone = "(11) 555-1234",
                            ValidadeConvenio = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Alergias = "Nenhuma alergia conhecida",
                            CPF = "09856326588",
                            ContatoEmergencia = "48996325484",
                            Convenio = "Plano de Saúde ABC",
                            CuidadosEspecificos = "Nenhum cuidado específico",
                            DataNascimento = new DateTime(1988, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "paciente8@example.com",
                            EstadoCivil = "Casado",
                            Genero = "Feminino",
                            Naturalidade = "São Paulo, SP",
                            NomeCompleto = "Paciente 8",
                            NumeroConvenio = "98765432",
                            RgOrgaoExpedidor = "1234567",
                            StatusSistema = "1",
                            Telefone = "(11) 555-1234",
                            ValidadeConvenio = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Alergias = "Nenhuma alergia conhecida",
                            CPF = "09856326588",
                            ContatoEmergencia = "48996325484",
                            Convenio = "Plano de Saúde ABC",
                            CuidadosEspecificos = "Nenhum cuidado específico",
                            DataNascimento = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "paciente10@example.com",
                            EstadoCivil = "Casado",
                            Genero = "Feminino",
                            Naturalidade = "São Paulo, SP",
                            NomeCompleto = "Paciente 10",
                            NumeroConvenio = "98765432",
                            RgOrgaoExpedidor = "1234567",
                            StatusSistema = "1",
                            Telefone = "(11) 555-1234",
                            ValidadeConvenio = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LabMedicineAPI.Model.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("StatusSistema")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "09465328956",
                            Email = "admin1@admin.com",
                            Genero = "Outro",
                            NomeCompleto = "4Devs",
                            Senha = "12345678",
                            StatusSistema = "1",
                            Telefone = "48998000054",
                            Tipo = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "45662548652",
                            Email = "rafael@gmail.com",
                            Genero = "Masculino",
                            NomeCompleto = "Rafael Silva",
                            Senha = "12345678",
                            StatusSistema = "1",
                            Telefone = "48995321544",
                            Tipo = "Médico"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "06532589965",
                            Email = "alessandra@gmail.com",
                            Genero = "Feminino",
                            NomeCompleto = "Alessandra",
                            Senha = "12345678",
                            StatusSistema = "1",
                            Telefone = "48995874233",
                            Tipo = "Enfermeiro"
                        },
                        new
                        {
                            Id = 4,
                            CPF = "06523144785",
                            Email = "william84@gmail.com",
                            Genero = "Masculino",
                            NomeCompleto = "William",
                            Senha = "12345678",
                            StatusSistema = "1",
                            Telefone = "48996524233",
                            Tipo = "Enfermeiro"
                        });
                });

            modelBuilder.Entity("LabMedicineAPI.Model.ConsultaModel", b =>
                {
                    b.HasOne("LabMedicineAPI.Model.PacienteModel", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LabMedicineAPI.Model.UsuarioModel", "Usuario")
                        .WithMany("Consultas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.DietaModel", b =>
                {
                    b.HasOne("LabMedicineAPI.Model.PacienteModel", "Paciente")
                        .WithMany("Dietas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabMedicineAPI.Model.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.EnderecoModel", b =>
                {
                    b.HasOne("LabMedicineAPI.Model.PacienteModel", "Paciente")
                        .WithOne("Endereco")
                        .HasForeignKey("LabMedicineAPI.Model.EnderecoModel", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.ExameModel", b =>
                {
                    b.HasOne("LabMedicineAPI.Model.PacienteModel", "Paciente")
                        .WithMany("Exames")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabMedicineAPI.Model.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.ExercicioModel", b =>
                {
                    b.HasOne("LabMedicineAPI.Model.PacienteModel", "Paciente")
                        .WithMany("Exercicios")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabMedicineAPI.Model.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.MedicamentoModel", b =>
                {
                    b.HasOne("LabMedicineAPI.Model.PacienteModel", "Paciente")
                        .WithMany("Medicamentos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabMedicineAPI.Model.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.PacienteModel", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Dietas");

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Exames");

                    b.Navigation("Exercicios");

                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("LabMedicineAPI.Model.UsuarioModel", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
